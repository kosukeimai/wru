% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_race_v2.R
\name{predict_race_new}
\alias{predict_race_new}
\title{Race prediction function.}
\usage{
predict_race_new(
  voter.file,
  namesToUse = "last",
  census.geo,
  census.key,
  census.data = NA,
  retry = 3
)
}
\arguments{
\item{voter.file}{An object of class \code{data.frame}.
Must contain a row for each individual being predicted,
as well as a field named \code{\var{last}} containing each individual's surname.
If first name is also being used for prediction, the file must also contain a field
named \code{\var{first}}. If middle name is also being used for prediction, the field
must also contain a field named \code{\var{middle}}.
Moreover, \code{\var{voter.file}} must contain a field named
\code{\var{state}}, which contains the two-character abbreviation for each individual's
state of residence (e.g., \code{"nj"} for New Jersey).
If using Census geographic data in race/ethnicity predictions,
\code{\var{voter.file}} must also contain at least one of the following fields:
\code{\var{county}}, \code{\var{tract}}, \code{\var{block}}, and/or \code{\var{place}}.
These fields should contain character strings matching U.S. Census categories.
County is three characters (e.g., \code{"031"} not \code{"31"}),
tract is six characters, and block is four characters. Place is five characters.
See below for other optional fields.}

\item{namesToUse}{A character vector identifying which names to use for the prediction.
The default value is \code{"last"}, indicating that only the last name will be used.
Other options are \code{"last, first"}, indicating that both last and first names will be
used, and \code{"last, first, middle"}, indicating that last, first, and middle names will all
be used.}

\item{census.geo}{An optional character vector specifying what level of
geography to use to merge in U.S. Census 2010 geographic data. Currently
\code{"county"}, \code{"tract"}, \code{"block"}, and \code{"place"} are supported.
Note: sufficient information must be in user-defined \code{\var{voter.file}} object.
If \code{\var{census.geo} = "county"}, then \code{\var{voter.file}}
must have column named \code{county}.
If \code{\var{census.geo} = "tract"}, then \code{\var{voter.file}}
must have columns named \code{county} and \code{tract}.
And if \code{\var{census.geo} = "block"}, then \code{\var{voter.file}}
must have columns named \code{county}, \code{tract}, and \code{block}.
If \code{\var{census.geo} = "place"}, then \code{\var{voter.file}}
must have column named \code{place}.
Specifying \code{\var{census.geo}} will call \code{census_helper} function
to merge Census geographic data at specified level of geography.}

\item{census.key}{A character object specifying user's Census API
key. Required if \code{\var{census.geo}} is specified, because
a valid Census API key is required to download Census geographic data.}

\item{census.data}{A list indexed by two-letter state abbreviations,
which contains pre-saved Census geographic data.
Can be generated using \code{get_census_data} function.}

\item{retry}{The number of retries at the census website if network interruption occurs.}
}
\value{
Output will be an object of class \code{data.frame}. It will
 consist of the original user-input data with additional columns with
 predicted probabilities for each of the five major racial categories:
 \code{\var{pred.whi}} for White,
 \code{\var{pred.bla}} for Black,
 \code{\var{pred.his}} for Hispanic/Latino,
 \code{\var{pred.asi}} for Asian/Pacific Islander, and
 \code{\var{pred.oth}} for Other/Mixed.
}
\description{
\code{predict_race_new} makes probabilistic estimates of individual-level race/ethnicity.
}
\details{
This function implements the Bayesian race prediction methods outlined in
Imai, Olivella, and Rosenman (2021). The function produces probabilistic estimates of
individual-level race/ethnicity, based on name and geolocation.
}
\examples{
data(voters)
predict_race(voters, surname.only = TRUE)
predict_race(voter.file = voters, surname.only = TRUE)
\dontrun{predict_race(voter.file = voters, census.geo = "tract", census.key = "...")}
\dontrun{predict_race(voter.file = voters, census.geo = "tract", census.key = "...", age = T)}
\dontrun{predict_race(voter.file = voters, census.geo = "place", census.key = "...", sex = T)}
\dontrun{CensusObj <- get_census_data("...", state = c("NY", "DC", "NJ"));
predict_race(voter.file = voters, census.geo = "tract", census.data = CensusObj, party = "PID")}
\dontrun{CensusObj2 <- get_census_data(key = "...", state = c("NY", "DC", "NJ"), age = T, sex = T);
predict_race(voter.file = voters, census.geo = "tract", census.data = CensusObj2, age = T, sex = T)}
\dontrun{CensusObj3 <- get_census_data(key = "...", state = c("NY", "DC", "NJ"), census.geo = "place");
predict_race(voter.file = voters, census.geo = "place", census.data = CensusObj3)}
}
